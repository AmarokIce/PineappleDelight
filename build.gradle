plugins {
    id 'fabric-loom'
    id 'maven-publish'
    id "org.jetbrains.kotlin.jvm"
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
    flatDir {
        dir 'lib'
    }
}

dependencies {
    //to change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    modImplementation "net.fabricmc:fabric-language-kotlin:${project.fabric_kotlin_version}"

    modImplementation "com.nhoryzon.mc.farmersdelight:farmers-delight-fabric-0.0.8-dev"

}

processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}

tasks.withType(JavaCompile) {
    it.options.encoding = "UTF-8"

	def targetVersion = 8
	if (JavaVersion.current().isJava9Compatible()) {
		 it.options.release = targetVersion
	}
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

jar {
    from ("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    repositories {

    }
}

compileKotlin.kotlinOptions.jvmTarget = "1.8"